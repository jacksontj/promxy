##
## Regular prometheus configuration
##

# Uncomment below section to enable evaluation interval.
#global:
#  evaluation_interval: 5s
#  external_labels:
#    source: promxy

# Rule files specifies a list of globs. Rules and alerts are read from
# all matching files. Uncomment below section to enable.

#rule_files:
#  - "*rule"

# Alerting specifies settings related to the Alertmanager. Uncomment below section to enable.

#alerting:
#  alertmanagers:
#    - scheme: http
#      static_configs:
#        - targets:
#            - "127.0.0.1:12345"

# remote_write configuration is used by promxy as its local Appender, meaning all
# metrics promxy would "write" (not export) would be sent to this. Examples
# of this include: recording rules, metrics on alerting rules, etc. Uncomment below section to enable.

#remote_write:
#  - url: http://localhost:8083/receive

##
### Promxy configuration
##
promxy:
  # In below examples, point 8000 & 8001 to prometheus servers.
  server_groups:
    # All upstream prometheus service discovery mechanisms are supported with the same
    # markup, all defined in https://github.com/prometheus/prometheus/blob/master/discovery/config/config.go#L33
    - static_configs:
        - targets:
          - localhost:8000
      # labels to be added to metrics retrieved from this server_group
      labels:
        sg: localhost_8000
      # anti-affinity for merging values in timeseries between hosts in the server_group
      anti_affinity: 10s
      # time to wait for a server's response headers after fully writing the request (including its body, if any).
      # This time does not include the time to read the response body.
      timeout: 5s
      # Controls whether to use remote_read or the prom API for fetching remote RAW data (e.g. matrix selectors)
      # Note, some prometheus implementations (e.g. [VictoriaMetrics](https://github.com/prometheus/prometheus/issues/4456) don't support remote_read.
      remote_read: false
      # configures the path to send remote read requests to. The default is "api/v1/read"
      # path_prefix defines a prefix to prepend to all queries to hosts in this servergroup
      # This can be relabeled using __path_prefix__
      path_prefix: /prometheus
      # query_params adds the following map of query parameters to downstream requests.
      # The initial use-case for this is to add `nocache=1` to VictoriaMetrics downstreams
      # (see https://github.com/jacksontj/promxy/issues/202)
      scheme: http
      # options for promxy's HTTP client when talking to hosts in server_groups
      http_client:
        # dial_timeout controls how long promxy will wait for a connection to the downstream
        # the default is 200ms.
        dial_timeout: 1s
        tls_config:
          insecure_skip_verify: true
      # make response as optional
      ignore_error: false
    - static_configs:
        - targets:
            - localhost:8001
      # labels to be added to metrics retrieved from this server_group
      labels:
        sg: localhost_8001
      # anti-affinity for merging values in timeseries between hosts in the server_group
      anti_affinity: 10s
      # time to wait for a server's response headers after fully writing the request (including its body, if any).
      # This time does not include the time to read the response body.
      timeout: 5s
      # Controls whether to use remote_read or the prom API for fetching remote RAW data (e.g. matrix selectors)
      # Note, some prometheus implementations (e.g. [VictoriaMetrics](https://github.com/prometheus/prometheus/issues/4456) don't support remote_read.
      remote_read: false
      # configures the path to send remote read requests to. The default is "api/v1/read"
      # path_prefix defines a prefix to prepend to all queries to hosts in this servergroup
      # This can be relabeled using __path_prefix__
      path_prefix: /prometheus
      # query_params adds the following map of query parameters to downstream requests.
      # The initial use-case for this is to add `nocache=1` to VictoriaMetrics downstreams
      # (see https://github.com/jacksontj/promxy/issues/202)
      scheme: http
      # options for promxy's HTTP client when talking to hosts in server_groups
      http_client:
        # dial_timeout controls how long promxy will wait for a connection to the downstream
        # the default is 200ms.
        dial_timeout: 1s
        tls_config:
          insecure_skip_verify: true
      # make response as optional
      ignore_error: false
